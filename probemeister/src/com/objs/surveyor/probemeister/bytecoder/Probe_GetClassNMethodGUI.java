/* 
 * <copyright> 
 *   
 *  Copyright 1999-2004 Object Services and Consulting, Inc. 
 *  under sponsorship of the Defense Advanced Research Projects 
 *  Agency (DARPA). 
 *  
 *  You can redistribute this software and/or modify it under the 
 *  terms of the Cougaar Open Source License as published on the 
 *  Cougaar Open Source Website (www.cougaar.org). 
 *  
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY 
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. 
 *   
 * </copyright> 
 */ 
/* 
 */

package com.objs.surveyor.probemeister.bytecoder;

import java.awt.*;
import javax.swing.*;

public class Probe_GetClassNMethodGUI extends javax.swing.JDialog
{

    static Probe_GetClassNMethodGUI gui;
    static {
        gui = new Probe_GetClassNMethodGUI((Frame)null);
    }
    
    boolean validateMethod = true;
    
    //Have one instance to save on memory.
    public static Probe_GetClassNMethodGUI gui() {return gui;}
    
	private Probe_GetClassNMethodGUI(Frame parent)
	{
		super(parent);
		
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		getContentPane().setLayout(null);
		setSize(405,220);
		setVisible(false);
		lTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		lTitle.setText("Probe Customization");
		getContentPane().add(lTitle);
		lTitle.setFont(new Font("Dialog", Font.BOLD, 18));
		lTitle.setBounds(10,12,384,27);
		lNote.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		lNote.setText("This Probe requires customization.");
		getContentPane().add(lNote);
		lNote.setFont(new Font("Dialog", Font.PLAIN, 10));
		lNote.setBounds(8,38,388,17);
		JLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
		JLabel1.setText("Class Name:");
		getContentPane().add(JLabel1);
		JLabel1.setBounds(80,92,93,24);
		JLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
		JLabel2.setText("Method Name:");
		getContentPane().add(JLabel2);
		JLabel2.setBounds(80,121,93,24);
//		JLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
//		JLabel3.setText("Message:");
//		getContentPane().add(JLabel3);
//		JLabel3.setBounds(11,132,93,24);
		bOK.setText("OK");
		getContentPane().add(bOK);
		bOK.setBounds(55,181,92,26);

		bCancel.setText("Cancel");
		getContentPane().add(bCancel);
		bCancel.setBounds(257,181,92,26);
		
		getContentPane().add(cbValidate);
		cbValidate.setBounds(146,151,122,26);
		
		getContentPane().add(vClassName);
		vClassName.setBounds(178,95,132,21);
		getContentPane().add(vMethodName);
		vMethodName.setBounds(178,125,132,21);
		//getContentPane().add(vMessage);
		//vMessage.setBounds(108,135,272,21);
		JLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		JLabel4.setText("This probe calls a specified static method that takes no arguments.");
		getContentPane().add(JLabel4);
		JLabel4.setFont(new Font("Dialog", Font.PLAIN, 10));
		JLabel4.setBounds(8,49,388,17);
		
		JLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		JLabel5.setText("Use this probe with care as exceptions could occur in remote VM.");
		getContentPane().add(JLabel5);
		JLabel5.setFont(new Font("Dialog", Font.PLAIN, 10));
		JLabel5.setBounds(8,60,388,17);
		//}}
	
	    this.setModal(true);
	    
	    //init so their not null
	    this.vClassName.setText("");
	    this.vMethodName.setText("");
	    //this.vMessage.setText("");
	    
		//{{REGISTER_LISTENERS
		SymAction lSymAction = new SymAction();
		bOK.addActionListener(lSymAction);
		bCancel.addActionListener(lSymAction);
		cbValidate.addActionListener(lSymAction);
		//}}
	}

	private Probe_GetClassNMethodGUI()
	{
		this((Frame)null);
	}

	private Probe_GetClassNMethodGUI(String sTitle)
	{
		this();
		setTitle(sTitle);
	}

	static public void main(String args[])
	{
		(new Probe_GetClassNMethodGUI()).setVisible(true);
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension size = getSize();

		super.addNotify();

		if (frameSizeAdjusted)
			return;
		frameSizeAdjusted = true;

		// Adjust size of frame according to the insets
		Insets insets = getInsets();
		setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height);
	}

	// Used by addNotify
	boolean frameSizeAdjusted = false;

	//{{DECLARE_CONTROLS
	javax.swing.JLabel lTitle = new javax.swing.JLabel();
	javax.swing.JLabel lNote = new javax.swing.JLabel();
	javax.swing.JLabel JLabel1 = new javax.swing.JLabel();
	javax.swing.JLabel JLabel2 = new javax.swing.JLabel();
	//javax.swing.JLabel JLabel3 = new javax.swing.JLabel();
	javax.swing.JButton bOK = new javax.swing.JButton();
	javax.swing.JButton bCancel = new javax.swing.JButton();
	javax.swing.JTextField vClassName = new javax.swing.JTextField();
	javax.swing.JTextField vMethodName = new javax.swing.JTextField();
	//javax.swing.JTextField vMessage = new javax.swing.JTextField();
	javax.swing.JLabel JLabel4 = new javax.swing.JLabel();
	javax.swing.JLabel JLabel5 = new javax.swing.JLabel();
	javax.swing.JCheckBox cbValidate = new javax.swing.JCheckBox("Validate Method");
	//}}
	
	int result = 0;


	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == bOK)
				bOK_actionPerformed(event);
			if (object == bCancel)
				bCancel_actionPerformed(event);
			if (object == cbValidate)
			    validateMethod = cbValidate.isSelected();
		}
	}

	void bOK_actionPerformed(java.awt.event.ActionEvent event)
	{
	    result = 1;
	    this.setVisible(false);
	}

	void bCancel_actionPerformed(java.awt.event.ActionEvent event)
	{
	    result = 0;
	    this.setVisible(false);
	}
	
    public void setVisible(boolean _b, String _desc) {
        this.JLabel4.setText(_desc);
        this.cbValidate.setSelected(true); //default to validation
        super.setVisible(_b);
    }
	
	public int getResult() { return result; }
	public String getClassName() {return vClassName.getText();}
	public String getMethodName() {return vMethodName.getText();}
	public boolean validateMethod() {return validateMethod;}
	//public String getMsg() {return this.vMessage.getText();}
}